import 'package:firebase_core/firebase_core.dart';
import 'package:flutter/material.dart';
import 'package:flutter_dotenv/flutter_dotenv.dart';

Future<FirebaseOptions> getFirebaseOptions(TargetPlatform platform) async {
  await dotenv.load();

  switch (platform) {
    case TargetPlatform.android:
      final apiKey = dotenv.env['API_KEY_ANDROID'];
      final appId = dotenv.env['APP_ID_ANDROID'];
      if (apiKey == null || appId == null) {
        throw Exception(
            'Missing required environment variables for Android: API_KEY_ANDROID or API_ID_ANDROID');
      }
      return FirebaseOptions(
        apiKey: apiKey,
        appId: appId,
        messagingSenderId: '81352751083',
        projectId: 'eco-app-bb2b7',
        storageBucket: 'eco-app-bb2b7.appspot.com',
      );
    case TargetPlatform.iOS:
      final apiKey = dotenv.env['API_KEY_IOS'];
      final appId = dotenv.env['APP_ID_IOS'];
      final iosBundleId = dotenv.env['IOS_BUNDLE_ID']; // Add for iOS
      if (apiKey == null || appId == null || iosBundleId == null) {
        throw Exception(
            'Missing required environment variables for iOS: API_KEY_IOS, API_ID_IOS, or IOS_BUNDLE_ID');
      }
      return FirebaseOptions(
        apiKey: apiKey,
        appId: appId,
        messagingSenderId: '81352751083',
        projectId: 'eco-app-bb2b7',
        storageBucket: 'eco-app-bb2b7.appspot.com',
        iosBundleId: iosBundleId,
      );
    case TargetPlatform.macOS:
    // ... (similar logic for macOS, if needed)
    case TargetPlatform.windows:
    // ... (similar logic for windows, if needed)
    case TargetPlatform.linux:
    // ... (similar logic for linux, if needed)
    default:
      throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.');
  }
}









/*
// File generated by FlutterFire CLI.
// ignore_for_file: type=lint
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

/// Default [FirebaseOptions] for use with your Firebase apps.
///
/// Example:
/// ```dart
/// import 'firebase_options.dart';
/// // ...
/// await Firebase.initializeApp(
///   options: DefaultFirebaseOptions.currentPlatform,
/// );
/// ```
class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      throw UnsupportedError(
        'DefaultFirebaseOptions have not been configured for web - '
        'you can reconfigure this by running the FlutterFire CLI again.',
      );
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for macos - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for windows - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions have not been configured for linux - '
          'you can reconfigure this by running the FlutterFire CLI again.',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions are not supported for this platform.',
        );
    }
  }

  //ANDROID
  final apiKeyAN = dotenv.env['API_KEY_ANDROID']!;
  final appIdAN = dotenv.env['API_ID_ANDROID']!;

  //IOS
  final apiKeyIOS = dotenv.env['API_KEY_IOS']!;
  final apiIdIOS = dotenv.env['API_ID_IOS']!;

  static FirebaseOptions android = FirebaseOptions(
    apiKey: apiKeyAN,
    appId: appIdAN,
    messagingSenderId: '81352751083',
    projectId: 'eco-app-bb2b7',
    storageBucket: 'eco-app-bb2b7.appspot.com',
  );

  static FirebaseOptions ios = FirebaseOptions(
    apiKey: dotenv.env['API_KEY_IOS']!,
    appId: dotenv.env['API_ID_IOS']!,
    messagingSenderId: '81352751083',
    projectId: 'eco-app-bb2b7',
    storageBucket: 'eco-app-bb2b7.appspot.com',
    iosBundleId: 'com.example.ecoApp',
  );
}

 */